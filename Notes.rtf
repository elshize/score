{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fswiss\fcharset0 ArialMT;
}
{\colortbl;\red255\green255\blue255;\red2\green2\blue2;\red9\green80\blue208;\red0\green0\blue0;
\red188\green0\blue189;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgenericrgb\c784\c784\c784;\cssrgb\c0\c41176\c85098;\csgray\c0;
\cssrgb\c79464\c18343\c78935;\cssrgb\c0\c0\c0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://github.com/brson/rust-api-guidelines"}}{\fldrslt 
\f0\fs48 \cf2 https://github.com/brson/rust-api-guidelines}}
\f0\fs48 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://deterministic.space/elegant-apis-in-rust.html"}}{\fldrslt \cf2 https://deterministic.space/elegant-apis-in-rust.html}}\
https://pascalhertleif.de/artikel/good-practices-for-writing-rust-libraries/\
  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://rust-lang.github.io/book/second-edition/index.html"}}{\fldrslt \cf2 https://rust-lang.github.io/book/second-edition/index.html}}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://doc.rust-lang.org/stable/nomicon/README.html"}}{\fldrslt \cf2 https://doc.rust-lang.org/stable/nomicon/README.html}}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://rust-leipzig.github.io/architecture/2016/12/20/idiomatic-trees-in-rust/"}}{\fldrslt \cf2 https://rust-leipzig.github.io/architecture/2016/12/20/idiomatic-trees-in-rust/}}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://github.com/rust-unofficial/patterns"}}{\fldrslt \cf2 https://github.com/rust-unofficial/patterns}}\
 {\field{\*\fldinst{HYPERLINK "https://github.com/brson/rust-cookbook"}}{\fldrslt 
\fs36 \cf3 \expnd0\expndtw0\kerning0
\ul \ulc3 https://github.com/brson/rust-cookbook}}
\fs36 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf0 \
{\field{\*\fldinst{HYPERLINK "https://thesquareplanet.com/blog/rust-tips-and-tricks/"}}{\fldrslt https://thesquareplanet.com/blog/rust-tips-and-tricks/}}\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://danielkeep.github.io/itercheat_baked.html"}}{\fldrslt 
\fs48 \cf0 https://danielkeep.github.io/itercheat_baked.html}}\
\
\pard\pardeftab963\pardirnatural\partightenfactor0

\f1\fs40 \cf0 \kerning1\expnd0\expndtw0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs34 \cf4 \CocoaLigature0 3.300   simulation  finger print = F7AD\
\pard\pardeftab720\partightenfactor0

\f0\fs48 \cf2 \CocoaLigature1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs34 \cf5 \ul \ulc5 \CocoaLigature0 rsimbase\cf0 \ulnone : cargo build --release --example=battle_bots && ./target/release/examples/battle_bots --log-level=debug  --max-time=200s --num-bots=10 --seed=2\cf4 \
\pard\pardeftab720\partightenfactor0

\f0\fs48 \cf2 \CocoaLigature1 \
\
* Do mail\
* Weight/finances\
\pard\pardeftab720\sl480\partightenfactor0

\f2\fs50\fsmilli25333 \cf6 \expnd0\expndtw0\kerning0
* Look at TODOs\
* Add persistence?\
	- maybe with some simple viewer tools\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs48 \cf2 \kerning1\expnd0\expndtw0 * Rename it score?\
	- {\field{\*\fldinst{HYPERLINK "https://help.github.com/articles/renaming-a-repository/"}}{\fldrslt https://help.github.com/articles/renaming-a-repository/}}\
	- add some lame readme\
	- search for rsimbase\
* Start working on snet\
* Check parallelism:\
	- maintain a list of buckets where the bucket number is how many threads executed\
	- log that at debug\
	- counting should only be done if should_log\
\pard\pardeftab720\sl480\partightenfactor0

\f2\fs50\fsmilli25333 \cf6 \expnd0\expndtw0\kerning0
* Add an embedded web server\
	- starts up if \'97web\
	- waits for \'93run\'94 to be written to the web component\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs48 \cf2 \kerning1\expnd0\expndtw0 * Persist the store\
* Try 
\fs36 \cf0 \expnd0\expndtw0\kerning0
#[warn(unused_must_use)]
\fs48 \cf2 \kerning1\expnd0\expndtw0 \
* Try separate executioners\
* goals: deterministic, extensible, parallel, off-line analysis, portable, fast\
* use a write-once temporal store\
		- string keys, typed values\
			` for log lines auto-append onto the last value\
		- when running just use last recorded value\
		- for re-running just track keys that were registered by the client\
		- instead of a global lock, might want to have a concept of root nodes and put locks on those\
* Probably should have make targets to check finger prints\
* Could have optimistic parallelism:\
	- default to scheduling num cores components\
	- commit those that didn\'92t do a read from a key that a later time slice wrote to\
	- otherwise commit those that executed at the same time slice\
	- maybe self-adapt to scale back optimism\
* Need copyrights\
* could have reflected tables to encode meta info: units, blurb, default value, maybe ranges\
* http server uses REST to allow stuff to be get and set\
	0 can have integration tests\
* might also want some static sort of reporters\
	- maybe a version that spits out escaped text for console runs\
	- another could do rtf or markdown\
* have to pay close attention to reproducibility, even across architectures\
* Should be a way to collect results over runs\
* support multiple cores but not the cloud\
* probably just want to use code to configure\
* wonder if es could be sucked into the store\
* rsimnet, rsimserver\
}
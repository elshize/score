{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fswiss\fcharset0 ArialMT;
}
{\colortbl;\red255\green255\blue255;\red2\green2\blue2;\red9\green80\blue208;\red0\green0\blue0;
\red60\green60\blue59;\red60\green60\blue59;\red203\green0\blue77;\red9\green76\blue116;\red117\green66\blue151;
\red95\green124\blue3;\red240\green240\blue240;\red161\green33\blue108;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgenericrgb\c784\c784\c784;\cssrgb\c0\c41176\c85098;\csgray\c0;
\cssrgb\c30196\c30196\c29804;\cssrgb\c30196\c30196\c29804;\cssrgb\c84314\c0\c37255;\cssrgb\c0\c37255\c52941;\cssrgb\c53725\c34902\c65882;
\cssrgb\c44314\c54902\c0;\cssrgb\c95294\c95294\c95294;\csgenericrgb\c63137\c12941\c42353;\cssrgb\c0\c0\c0;}
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs48 \cf2 publishing a new version\
	try clippy (requires nightly for now)\
	make sure tests work\
	make sure examples work\
	change the version number \
		dependencies auto-update if the first non-zero number doesn\'92t change\
	update categories (after slug pull request)\
	
\f1\fs34 \cf0 \CocoaLigature0 git tag version-0.X.0
\f0\fs48 \cf2 \CocoaLigature1 \
	cargo package\
		optional, allows you to inspect the target/package/*.crate file\
	cargo publish\
\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://github.com/brson/rust-api-guidelines"}}{\fldrslt \cf2 https://github.com/brson/rust-api-guidelines}}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://deterministic.space/elegant-apis-in-rust.html"}}{\fldrslt \cf2 https://deterministic.space/elegant-apis-in-rust.html}}\
https://pascalhertleif.de/artikel/good-practices-for-writing-rust-libraries/\
  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://rust-lang.github.io/book/second-edition/index.html"}}{\fldrslt \cf2 https://rust-lang.github.io/book/second-edition/index.html}}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://doc.rust-lang.org/stable/nomicon/README.html"}}{\fldrslt \cf2 https://doc.rust-lang.org/stable/nomicon/README.html}}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://rust-leipzig.github.io/architecture/2016/12/20/idiomatic-trees-in-rust/"}}{\fldrslt \cf2 https://rust-leipzig.github.io/architecture/2016/12/20/idiomatic-trees-in-rust/}}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://github.com/rust-unofficial/patterns"}}{\fldrslt \cf2 https://github.com/rust-unofficial/patterns}}\
 {\field{\*\fldinst{HYPERLINK "https://github.com/brson/rust-cookbook"}}{\fldrslt 
\fs36 \cf3 \expnd0\expndtw0\kerning0
\ul \ulc3 https://github.com/brson/rust-cookbook}}
\fs36 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf0 \
{\field{\*\fldinst{HYPERLINK "https://thesquareplanet.com/blog/rust-tips-and-tricks/"}}{\fldrslt https://thesquareplanet.com/blog/rust-tips-and-tricks/}}\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://danielkeep.github.io/itercheat_baked.html"}}{\fldrslt 
\fs48 \cf0 https://danielkeep.github.io/itercheat_baked.html}}\
\
\pard\pardeftab963\pardirnatural\partightenfactor0

\f1\fs40 \cf0 \kerning1\expnd0\expndtw0 \
rouille	really simple, active\
rustful	fairly light weight, built on top of hyper\
		lot of docs, active\
iron	pretty heavy weight\
		very active\
		{\field{\*\fldinst{HYPERLINK "https://www.jamestease.co.uk/blether/writing-a-basic-json-web-server-in-rust-using-iron"}}{\fldrslt https://www.jamestease.co.uk/blether/writing-a-basic-json-web-server-in-rust-using-iron}}\
nickel	fairly light weight, built on top of hyper\
		lot of examples, iffy docs, inactive\
pencil	very light weight, built on top of hyper\
		inactive\
		\
		\
curl http://127.0.0.1:9000/log/all\
\
curl -X PUT http://127.0.0.1:9000/set/time/10\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://es6-features.org/#Constants"}}{\fldrslt 
\fs36 \cf4 \CocoaLigature0 http://es6-features.org/#Constants}}
\fs36 \cf4 \CocoaLigature0 \
\pard\pardeftab963\pardirnatural\partightenfactor0

\f0\fs48 \cf2 \CocoaLigature1 \
\pard\pardeftab720\sl540\partightenfactor0

\f1\fs36 \cf5 \expnd0\expndtw0\kerning0
\
display-details\
\
\
\pard\pardeftab720\sl540\partightenfactor0
\cf6 \outl0\strokewidth0 \strokec6 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 let\cf6 \strokec6  me = state.component.\cf8 \strokec8 get_component\cf6 \strokec6 (\cf9 \strokec9 self\cf6 \strokec6 .id);\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 let\cf6 \strokec6  (root_id, _) = state.components.\cf8 \strokec8 get_root\cf6 \strokec6 (me);\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 let\cf6 \strokec6  event = Event::\cf8 \strokec8 new\cf6 \strokec6 (\cf10 \strokec10 "sent-message"\cf6 \strokec6 );\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cb11 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0effector.\cf8 \strokec8 schedule_immediately\cf6 \strokec6 (event, root_id);\cb1 \
\pard\pardeftab720\sl540\partightenfactor0
\cf6 \cb11 \'a0\'a0\'a0\'a0\cb1 \
\
\pard\pardeftab720\sl380\partightenfactor0
\cf5 \outl0\strokewidth0 \
\pard\pardeftab720\partightenfactor0

\f0\fs48 \cf2 \kerning1\expnd0\expndtw0 * Returns\
- \'97root is a really crappy name\
* Support simulator page\
	- support help (maybe as some sort of drop down)\
		` although a new page would make it easier to compare\
	- maybe we can open a browser window when the sim starts?\
		` probably rather OS specific\
\pard\pardeftab720\sl540\partightenfactor0
\cf2 * Use a background pattern\
\pard\pardeftab720\partightenfactor0
\cf2 * Work on an sdebug tool:\
	- support get map\
		svg would make mousing easier\
			{\field{\*\fldinst{HYPERLINK "http://dmitrybaranovskiy.github.io/raphael/"}}{\fldrslt http://dmitrybaranovskiy.github.io/raphael/}}\
		support all the weird display options (using defaults where indicated)\
		units should default to components, i.e. 0,0 for first item, 1,0 for second\
		infer world size if it isnt set\
		make sure all of the battle bots display state is actually used\
	- should have a 
\f1\fs40 \cf12 favicon.ico
\f0\fs48 \cf2 \
	- if we add a dependency upon score then sdebug will show up as a dependent crate\
	- readme should say how to setup toml file\
	- readme should point to sdebug\
	- publish a new version of score as well as sdebug\
\pard\pardeftab720\sl480\partightenfactor0

\f2\fs50\fsmilli25333 \cf13 \expnd0\expndtw0\kerning0
* Look at TODOs\
* Start using clippy\
* Might be able to cleanup the code a bit by making some modules directories\
* Could have a specialized project just to show log files:\
\pard\pardeftab963\pardirnatural\partightenfactor0

\f0\fs48 \cf2 \kerning1\expnd0\expndtw0 	# comments are hash mark in first column\
	# =~ is a case insensitive regex match\
	# !=~ is a case insensitive regex non-match\
	# expressions are applied in the order they are listed\
	# to be really cool could have an option to persist these\
	#time >= 0.0\
	level >= Debug\
	#show path =~ .+\
	#hide message =~ xxx\
	#color path red =~ error\
	#back color path gray =~ blah\
\pard\pardeftab720\sl480\partightenfactor0

\f2\fs50\fsmilli25333 \cf13 \expnd0\expndtw0\kerning0
* Add persistence?\
	- maybe with some simple viewer tools\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f0\fs48 \cf2 \kerning1\expnd0\expndtw0 * Start working on snet\
* Check parallelism:\
	- maintain a list of buckets where the bucket number is how many threads executed\
	- log that at debug\
	- counting should only be done if should_log\
\pard\pardeftab720\sl480\partightenfactor0

\f2\fs50\fsmilli25333 \cf13 \expnd0\expndtw0\kerning0
* Add an embedded web server\
	- starts up if \'97web\
	- waits for \'93run\'94 to be written to the web component\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f0\fs48 \cf2 \kerning1\expnd0\expndtw0 * Persist the store\
* Try 
\fs36 \cf0 \expnd0\expndtw0\kerning0
#[warn(unused_must_use)]
\fs48 \cf2 \kerning1\expnd0\expndtw0 \
* Try separate executioners\
* goals: deterministic, extensible, parallel, off-line analysis, portable, fast\
* use a write-once temporal store\
		- string keys, typed values\
			` for log lines auto-append onto the last value\
		- when running just use last recorded value\
		- for re-running just track keys that were registered by the client\
		- instead of a global lock, might want to have a concept of root nodes and put locks on those\
* Probably should have make targets to check finger prints\
* Could have optimistic parallelism:\
	- default to scheduling num cores components\
	- commit those that didn\'92t do a read from a key that a later time slice wrote to\
	- otherwise commit those that executed at the same time slice\
	- maybe self-adapt to scale back optimism\
* Need copyrights\
* could have reflected tables to encode meta info: units, blurb, default value, maybe ranges\
* http server uses REST to allow stuff to be get and set\
	0 can have integration tests\
* might also want some static sort of reporters\
	- maybe a version that spits out escaped text for console runs\
	- another could do rtf or markdown\
* have to pay close attention to reproducibility, even across architectures\
* Should be a way to collect results over runs\
* support multiple cores but not the cloud\
* probably just want to use code to configure\
* wonder if es could be sucked into the store\
\pard\pardeftab720\partightenfactor0
\cf2 * Would be cool to have a checkbox for animated runs\
	- could have a checkbox under the run until button\
	- would need to change Run Until to Stop\
	- would need to disable Run Until Changed\
}